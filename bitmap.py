#BMPHeader

dummyHeader

#Break down header into integer bytes

brokenDownHeader = list(dummyHeader)
dummyHeaderList = []

for i in range(len(brokenDownHeader)/2):
    dummyHeaderList.append(brokenDownHeader[2*i]+brokenDownHeader[2*i + 1])

for i in range(len(dummyHeaderList)):
    dummyHeaderList[i] = int(dummyHeaderList[i],16)

def intToByteArray(yourInt, numBytes):
    outputArray = []
    for i in range(numBytes):
        outputArray.append(yourInt/(256**i)%256)
    return outputArray

def twoDimArrayToBitmap(pixelList, fileName):
    width = len(pixelList[0])
    height = len(pixelList)
    rawDataSize = width * height + 2
    
    widthInBytes = intToByteArray(width , 4)
    heightInBytes = intToByteArray(height , 4)
    rawDataSizeInBytes = intToByteArray(rawDataSize , 4)

    headerList = dummyHeaderList

    #Specify dimensions of image in header

    for i in range(4):
        headerList[i+18] = widthInBytes[i]
        headerList[i+22] = heightInBytes[i]
        headerList[i+34] = rawDataSizeInBytes[i]
    padding = (4 - (width%4))%4  #bitmap requires padding of each row to a multiple of four bytes
    paddingArray = []
    for i in range(padding):
        paddingArray.append(0)
    flatPixelList = []
    for i in range(height):
        flatPixelList.extend(pixelList[i] + paddingArray)
    newFileBytes = dummyHeaderList + flatPixelList + [0,0]
    newFileByteArray = bytearray(newFileBytes)
    newFile = open (fileName, "wb")
    newFile.write(newFileByteArray)
    newFile.close()
    
    print "Wrote image to " + str(fileName) + "."
    



